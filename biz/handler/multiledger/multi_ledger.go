// Code generated by hertz generator.

package multiledger

import (
	"context"

	"github.com/XZ0730/runFzu/biz/model/base"
	multiledger "github.com/XZ0730/runFzu/biz/model/multiledger"
	"github.com/XZ0730/runFzu/biz/pack"
	"github.com/XZ0730/runFzu/biz/service"
	"github.com/XZ0730/runFzu/pkg/errno"
	"github.com/XZ0730/runFzu/pkg/utils"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CreateMultiledger .
// @router /api/multiLedger [POST]
func CreateMultiledger(ctx context.Context, c *app.RequestContext) {
	var err error
	var req multiledger.CreateMLRequest
	resp := new(base.BaseResponse)
	token_byte := c.GetHeader("token")
	claim, _ := utils.CheckToken(string(token_byte))
	err = c.BindAndValidate(&req)
	if err != nil {
		pack.PackBase(resp, errno.ParamError.ErrorCode, errno.ParamError.ErrorMsg)
		c.JSON(consts.StatusOK, resp)
		return
	}
	code, msg := service.NewMultiLedgerService().CreateMultiLedger(claim.UserId, &req)
	pack.PackBase(resp, code, msg)
	c.JSON(consts.StatusOK, resp)
}
